name: Build Executables

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v5
      - name: Set up uv
        uses: astral-sh/setup-uv@v6
        with:
            version: '0.9.0'
            enable-cache: true
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: '.python-version'
      - name: Install dependencies
        run: uv sync --locked --all-extras --dev
      - name: Build executable
        run: |
          uv run pyinstaller --onefile --windowed --name obs-gsheets src/main.py
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: obs-gsheets-${{ matrix.os }}
          path: dist/*
    
  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Version from tag
        id: version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      - name: Generate changelog
        id: changelog
        uses: mikepenz/release-changelog-builder-action@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Download all artifacts
        uses: actions/download-artifact@v5
        with:
          path: ./dist
      - name: Prepare release assets
        run: |
          mkdir -p release
          find ./dist -type f -exec cp {} ./release/ \;
          cp config.sample.toml ./release/config.toml
          cp LICENSE.md ./release/
          cp README.md ./release/ 2>/dev/null || true
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.version.outputs.VERSION }}
          name: ${{ steps.version.outputs.VERSION }}
          body_path: ${{steps.changelog.outputs.changelog}}
          draft: false
          prerelease: ${{ contains(steps.version.outputs.VERSION, '-') }}
          files: |
            ./release/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
