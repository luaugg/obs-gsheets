name: Build and Release

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0, v2.1.3, etc.

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - os: windows
            runner: windows-latest
            target: bun-windows-x64
            artifact: obs-gsheets-windows-x64.exe
          - os: linux
            runner: ubuntu-latest
            target: bun-linux-x64
            artifact: obs-gsheets-linux-x64
          - os: macos
            runner: macos-latest
            target: bun-darwin-x64
            artifact: obs-gsheets-macos-x64
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2.0.2
        with:
          bun-version: latest
      
      - name: Install dependencies
        run: bun install --frozen-lockfile
      
      - name: Compile for ${{ matrix.os }}
        run: bun build src/index.ts --compile --minify --target=${{ matrix.target }} --outfile ${{ matrix.artifact }}
      
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact }}
          path: ${{ matrix.artifact }}
  
  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Extract version from tag
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      
      - name: Generate changelog
        id: changelog
        run: |
          # Get the previous tag
          PREV_TAG=$(git describe --abbrev=0 --tags $(git rev-list --tags --skip=1 --max-count=1) 2>/dev/null || echo "")
          
          if [ -z "$PREV_TAG" ]; then
            # First release, get all commits
            CHANGELOG=$(git log --pretty=format:"- %s (%h)" --no-merges)
          else
            # Get commits since previous tag
            CHANGELOG=$(git log ${PREV_TAG}..HEAD --pretty=format:"- %s (%h)" --no-merges)
          fi
          
          # Save to file for multiline output
          echo "$CHANGELOG" > changelog.txt
          echo "PREV_TAG=$PREV_TAG" >> $GITHUB_OUTPUT
      
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts
      
      - name: Prepare release assets
        run: |
          mkdir -p release
          find ./artifacts -type f -exec cp {} ./release/ \;
          cp config.sample.toml ./release/config.toml
          cp CONFIGURATION.md ./release/
          cp README.md ./release/ 2>/dev/null || true
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.VERSION }}
          name: Release ${{ steps.version.outputs.VERSION }}
          body_path: changelog.txt
          draft: false
          prerelease: ${{ contains(steps.version.outputs.VERSION, '-') }}
          files: |
            ./release/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}